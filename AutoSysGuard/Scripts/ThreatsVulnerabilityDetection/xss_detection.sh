#!/bin/bash

# Extended XSS attack patterns
XSS_PATTERNS=(
    "<script>"                 # Script tag
    "</script>"                # Closing script tag
    "<img src=javascript:"     # Img tag with JavaScript
    "<iframe src=javascript:" # Iframe tag with JavaScript
    "<svg onload="             # SVG tag with onload event
    "onerror="                 # Onerror event handler
    "onclick="                 # Onclick event handler
    "onmouseover="             # Onmouseover event handler
    "eval("                    # JavaScript eval function
    "alert("                   # JavaScript alert function
    "confirm("                 # JavaScript confirm function
    "document.cookie"          # Accessing cookies
    "window.location"          # Redirecting window
    "document.write("          # Document.write function
    "<a href=javascript:"      # Anchor tag with JavaScript
    "<script>alert('XSS')</script>"  # Example XSS payload
    "%3Cscript%3E"             # URL Encoded script tag
    "%3Cimg%20src%3D%22javascript%3Aalert%28%27XSS%27%29%22"  # URL Encoded img tag with JS
)

# Output file for detected XSS attempts
OUTPUT_FILE="log/xss_attempts.log"
ALERT_EMAIL="admin@autosysguard.com"  # Set the email for alerts

# Function to detect XSS patterns in logs
detect_xss() {
    local LOG_FILE=$1
    tail -n 0 -f "$LOG_FILE" | while read -r line; do
        # Extract the timestamp, IP address, and request method for better logging
        TIMESTAMP=$(echo "$line" | awk '{print $4 " " $5}')
        IP_ADDRESS=$(echo "$line" | awk '{print $1}')
        METHOD=$(echo "$line" | awk '{print $6}' | sed 's/"//g')
        URL=$(echo "$line" | awk '{print $7}')

        for PATTERN in "${XSS_PATTERNS[@]}"; do
            if echo "$line" | grep -i "$PATTERN" > /dev/null; then
                # Log the detected XSS attempt with more metadata (IP, timestamp, method, etc.)
                echo "$TIMESTAMP - XSS Pattern Detected - IP: $IP_ADDRESS - Method: $METHOD - URL: $URL - Pattern: $PATTERN" >> "$OUTPUT_FILE"
                echo "$line" >> "$OUTPUT_FILE"

                # Send an alert email (optional)
                echo -e "XSS Attempt Detected:\nTimestamp: $TIMESTAMP\nIP: $IP_ADDRESS\nMethod: $METHOD\nURL: $URL\nPattern: $PATTERN\nRequest: $line" | mail -s "XSS Attempt Detected" "$ALERT_EMAIL"
            fi
        done
    done
}

# Run the XSS detection function with the provided log file
detect_xss "$1"
