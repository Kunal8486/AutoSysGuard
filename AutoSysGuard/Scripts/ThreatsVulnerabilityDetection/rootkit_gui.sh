#!/bin/bash
# rootkit_gui.sh

# Define the path to the rootkit detection script
SCRIPT_PATH="AutoSysGuard/Scripts/ThreatsVulnerabilityDetection/rootkit.sh"

# Function to schedule the cron job based on the selection
schedule_cron() {
  # Display a dropdown for the user to select the schedule type
  cron_schedule_type=$(zenity --list --title="Select Cron Schedule" --column="Schedule Type" \
    "Hourly" \
    "Daily" \
    "Weekly" \
    "Monthly")
  
  if [[ -z "$cron_schedule_type" ]]; then
    zenity --error --text="You must select a schedule type!"
    exit 1
  fi

  # Set the cron schedule based on the user's choice
  case $cron_schedule_type in
    "Hourly")
      cron_schedule="0 * * * *"  # Every hour
      ;;
    "Daily")
      cron_schedule="0 0 * * *"  # Every day at midnight
      ;;
    "Weekly")
      cron_schedule="0 0 * * 0"  # Every Sunday at midnight
      ;;
    "Monthly")
      cron_schedule="0 0 1 * *"  # Every 1st day of the month at midnight
      ;;
    *)
      zenity --error --text="Invalid selection. Exiting."
      exit 1
      ;;
  esac

  # Check if the script exists
  if [[ ! -f "$SCRIPT_PATH" ]]; then
    zenity --error --text="Rootkit detection script does not exist at the specified path: $SCRIPT_PATH"
    exit 1
  fi

  # Add the cron job
  (crontab -l 2>/dev/null; echo "$cron_schedule $SCRIPT_PATH >> ./log/cron.log 2>&1") | crontab -

  if [[ $? -eq 0 ]]; then
    zenity --info --text="Cron job has been scheduled successfully for $cron_schedule."
  else
    zenity --error --text="Failed to schedule the cron job."
  fi
}

# Display GUI options for the user to choose to schedule the cron job
action=$(zenity --list --radiolist --title="Rootkit Detection and Cron Job Setup" --column="Select" --column="Action" \
  TRUE "Schedule Cron Job" \
  FALSE "Exit")

# Handle user selection
case $action in

  "Schedule Cron Job")
    schedule_cron
    ;;
  "Exit")
    exit 0
    ;;
  *)
    zenity --error --text="Invalid selection. Exiting."
    exit 1
    ;;
esac
